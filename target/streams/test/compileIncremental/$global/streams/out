[0m[[0m[0mdebug[0m] [0m[0mThe mc.parser.MCLexer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(SUBOP,[Default]), UsedName(ILLEGAL_ESCAPE,[Default]), UsedName(UNCLOSE_STRING,[Default]), UsedName(EQUALOP,[Default]), UsedName(DIVOP,[Default]), UsedName(_serializedATN,[Default]), UsedName(ADDOP,[Default]), UsedName(LTOP,[Default]), UsedName(NEQUALOP,[Default]), UsedName(NEVOP,[Default]), UsedName(OROP,[Default]), UsedName(MODOP,[Default]), UsedName(MULOP,[Default]), UsedName(COMMA,[Default]), UsedName(LTEOP,[Default]), UsedName(ASSIGNOP,[Default]), UsedName(ANDOP,[Default]), UsedName(ERROR_CHAR,[Default]), UsedName(INTLIT,[Default]), UsedName(GTEOP,[Default]), UsedName(GTOP,[Default]), UsedName(FLOATLIT,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) mc.parser.MCLexer: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) mc.parser.MCLexer.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of TestLexer. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of TestParser. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe mc.parser.MCParser has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(RULE_exp,[Default]), UsedName(INTTYPE,[Default]), UsedName(RULE_expStmt,[Default]), UsedName(RULE_arrayPointerType,[Default]), UsedName(BOOLTYPE,[Default]), UsedName(exp6,[Default]), UsedName(DowhileStmtContext,[Default]), UsedName(DeclPartContext,[Default]), UsedName(ArrayPointerTypeContext,[Default]), UsedName(SUBOP,[Default]), UsedName(RULE_stmtPart,[Default]), UsedName(indexer,[Default]), UsedName(exp1,[Default]), UsedName(RULE_exp3,[Default]), UsedName(ILLEGAL_ESCAPE,[Default]), UsedName(FLOATTYPE,[Default]), UsedName(RULE_indexExp,[Default]), UsedName(dowhileStmt,[Default]), UsedName(UNCLOSE_STRING,[Default]), UsedName(funcall,[Default]), UsedName(LP,[Default]), UsedName(LINECMT,[Default]), UsedName(RULE_exp7,[Default]), UsedName(RULE_indexer,[Default]), UsedName(RULE_exp1,[Default]), UsedName(ArgListContext,[Default]), UsedName(ManyVarContext,[Default]), UsedName(RULE_exp6,[Default]), UsedName(stmtPart,[Default]), UsedName(exp0,[Default]), UsedName(ifunmatch,[Default]), UsedName(RULE_aExpReturn,[Default]), UsedName(varDecl,[Default]), UsedName(STRINGTYPE,[Default]), UsedName(RULE_exp8,[Default]), UsedName(decl,[Default]), UsedName(DO,[Default]), UsedName(SEMI,[Default]), UsedName(EQUALOP,[Default]), UsedName(PrimitiveTypeContext,[Default]), UsedName(DIVOP,[Default]), UsedName(_serializedATN,[Default]), UsedName(RULE_declList,[Default]), UsedName(exp4,[Default]), UsedName(ParaDeclContext,[Default]), UsedName(RULE_argListNonNull,[Default]), UsedName(AExpReturnContext,[Default]), UsedName(Exp0Context,[Default]), UsedName(ADDOP,[Default]), UsedName(RULE_body,[Default]), UsedName(ID,[Default]), UsedName(RULE_paraDecl,[Default]), UsedName(LTOP,[Default]), UsedName(RULE_paraListNonNull,[Default]), UsedName(NEQUALOP,[Default]), UsedName(NEVOP,[Default]), UsedName(forStmt,[Default]), UsedName(ExpStmtContext,[Default]), UsedName(exp8,[Default]), UsedName(ParaListNonNullContext,[Default]), UsedName(RULE_breakStmt,[Default]), UsedName(RP,[Default]), UsedName(RULE_paraList,[Default]), UsedName(OtherStmtContext,[Default]), UsedName(ReturnStmtContext,[Default]), UsedName(ContinueStmtContext,[Default]), UsedName(mctype,[Default]), UsedName(OROP,[Default]), UsedName(RULE_funcall,[Default]), UsedName(RULE_continueStmt,[Default]), UsedName(noExpReturn,[Default]), UsedName(ifStmt,[Default]), UsedName(BLOCKCMT,[Default]), UsedName(IndexExpContext,[Default]), UsedName(TRUE,[Default]), UsedName(StmtContext,[Default]), UsedName(declList,[Default]), UsedName(RULE_stmt,[Default]), UsedName(ifmatch,[Default]), UsedName(continueStmt,[Default]), UsedName(RULE_exp9,[Default]), UsedName(RS,[Default]), UsedName(FALSE,[Default]), UsedName(RULE_exp0,[Default]), UsedName(BOOLLIT,[Default]), UsedName(expStmt,[Default]), UsedName(IF,[Default]), UsedName(Exp2Context,[Default]), UsedName(RULE_funcType,[Default]), UsedName(funcDecl,[Default]), UsedName(RULE_exp4,[Default]), UsedName(paraListNonNull,[Default]), UsedName(MODOP,[Default]), UsedName(CONTINUE,[Default]), UsedName(RULE_inputArrPointerType,[Default]), UsedName(ArgListNonNullContext,[Default]), UsedName(aExpReturn,[Default]), UsedName(RULE_returnStmt,[Default]), UsedName(MULOP,[Default]), UsedName(BodyContext,[Default]), UsedName(RULE_decl,[Default]), UsedName(IfmatchContext,[Default]), UsedName(WHILE,[Default]), UsedName(IfunmatchContext,[Default]), UsedName(Exp6Context,[Default]), UsedName(variable,[Default]), UsedName(ELSE,[Default]), UsedName(blockStmt,[Default]), UsedName(RULE_manyVar,[Default]), UsedName(breakStmt,[Default]), UsedName(BlockStmtContext,[Default]), UsedName(RULE_ifStmt,[Default]), UsedName(inputArrPointerType,[Default]), UsedName(RULE_declPart,[Default]), UsedName(RULE_noExpReturn,[Default]), UsedName(OutputArrPointerTypeContext,[Default]), UsedName(returnStmt,[Default]), UsedName(VariableContext,[Default]), UsedName(Exp7Context,[Default]), UsedName(RULE_blockStmt,[Default]), UsedName(RULE_exp5,[Default]), UsedName(RULE_funcDecl,[Default]), UsedName(VarDeclContext,[Default]), UsedName(paraList,[Default]), UsedName(RULE_forStmt,[Default]), UsedName(COMMA,[Default]), UsedName(RULE_ifunmatch,[Default]), UsedName(indexExp,[Default]), UsedName(declPart,[Default]), UsedName(StmtmatchContext,[Default]), UsedName(exp2,[Default]), UsedName(LTEOP,[Default]), UsedName(arrayPointerType,[Default]), UsedName(RULE_varDecl,[Default]), UsedName(FuncCallContext,[Default]), UsedName(FuncallContext,[Default]), UsedName(Exp4Context,[Default]), UsedName(stmtunmatch,[Default]), UsedName(Exp5Context,[Default]), UsedName(manyVar,[Default]), UsedName(BREAK,[Default]), UsedName(RULE_outputArrPointerType,[Default]), UsedName(NoExpReturnContext,[Default]), UsedName(paraDecl,[Default]), UsedName(ASSIGNOP,[Default]), UsedName(exp5,[Default]), UsedName(ANDOP,[Default]), UsedName(LS,[Default]), UsedName(T__0,[Default]), UsedName(RULE_primitiveType,[Default]), UsedName(RULE_variable,[Default]), UsedName(RULE_argList,[Default]), UsedName(ERROR_CHAR,[Default]), UsedName(stmtmatch,[Default]), UsedName(VOIDTYPE,[Default]), UsedName(MctypeContext,[Default]), UsedName(RULE_stmtmatch,[Default]), UsedName(BreakStmtContext,[Default]), UsedName(STRINGLIT,[Default]), UsedName(InputArrPointerTypeContext,[Default]), UsedName(RULE_ifmatch,[Default]), UsedName(Exp3Context,[Default]), UsedName(LB,[Default]), UsedName(INTLIT,[Default]), UsedName(ExpContext,[Default]), UsedName(Exp9Context,[Default]), UsedName(argListNonNull,[Default]), UsedName(FuncTypeContext,[Default]), UsedName(otherStmt,[Default]), UsedName(argList,[Default]), UsedName(GTEOP,[Default]), UsedName(GTOP,[Default]), UsedName(RULE_mctype,[Default]), UsedName(StmtPartContext,[Default]), UsedName(exp9,[Default]), UsedName(DeclListContext,[Default]), UsedName(exp,[Default]), UsedName(WS,[Default]), UsedName(RULE_dowhileStmt,[Default]), UsedName(RULE_otherStmt,[Default]), UsedName(funcCall,[Default]), UsedName(FOR,[Default]), UsedName(RULE_exp2,[Default]), UsedName(ParaListContext,[Default]), UsedName(funcType,[Default]), UsedName(RB,[Default]), UsedName(RULE_funcCall,[Default]), UsedName(IfStmtContext,[Default]), UsedName(DeclContext,[Default]), UsedName(StmtunmatchContext,[Default]), UsedName(FuncDeclContext,[Default]), UsedName(Exp1Context,[Default]), UsedName(IndexerContext,[Default]), UsedName(primitiveType,[Default]), UsedName(outputArrPointerType,[Default]), UsedName(body,[Default]), UsedName(Exp8Context,[Default]), UsedName(RETURN,[Default]), UsedName(FLOATLIT,[Default]), UsedName(stmt,[Default]), UsedName(ForStmtContext,[Default]), UsedName(exp7,[Default]), UsedName(RULE_stmtunmatch,[Default]), UsedName(exp3,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) mc.parser.MCParser: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) mc.parser.MCParser.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of TestParser. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/thomasho/Documents/PPL/micro_c_compiler/src/test/scala/TestAst.scala, /home/thomasho/Documents/PPL/micro_c_compiler/src/test/scala/AstSuite.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/home/thomasho/Documents/PPL/micro_c_compiler/target/scala-2.12/test-classes/ParserSuite.class, /home/thomasho/Documents/PPL/micro_c_compiler/target/scala-2.12/test-classes/LexerSuite.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(mc.parser.MCLexer,ModifiedNames(changes = UsedName(SUBOP,[Default]), UsedName(ILLEGAL_ESCAPE,[Default]), UsedName(UNCLOSE_STRING,[Default]), UsedName(EQUALOP,[Default]), UsedName(DIVOP,[Default]), UsedName(_serializedATN,[Default]), UsedName(ADDOP,[Default]), UsedName(LTOP,[Default]), UsedName(NEQUALOP,[Default]), UsedName(NEVOP,[Default]), UsedName(OROP,[Default]), UsedName(MODOP,[Default]), UsedName(MULOP,[Default]), UsedName(COMMA,[Default]), UsedName(LTEOP,[Default]), UsedName(ASSIGNOP,[Default]), UsedName(ANDOP,[Default]), UsedName(ERROR_CHAR,[Default]), UsedName(INTLIT,[Default]), UsedName(GTEOP,[Default]), UsedName(GTOP,[Default]), UsedName(FLOATLIT,[Default]))), NamesChange(mc.parser.MCParser,ModifiedNames(changes = UsedName(RULE_exp,[Default]), UsedName(INTTYPE,[Default]), UsedName(RULE_expStmt,[Default]), UsedName(RULE_arrayPointerType,[Default]), UsedName(BOOLTYPE,[Default]), UsedName(exp6,[Default]), UsedName(DowhileStmtContext,[Default]), UsedName(DeclPartContext,[Default]), UsedName(ArrayPointerTypeContext,[Default]), UsedName(SUBOP,[Default]), UsedName(RULE_stmtPart,[Default]), UsedName(indexer,[Default]), UsedName(exp1,[Default]), UsedName(RULE_exp3,[Default]), UsedName(ILLEGAL_ESCAPE,[Default]), UsedName(FLOATTYPE,[Default]), UsedName(RULE_indexExp,[Default]), UsedName(dowhileStmt,[Default]), UsedName(UNCLOSE_STRING,[Default]), UsedName(funcall,[Default]), UsedName(LP,[Default]), UsedName(LINECMT,[Default]), UsedName(RULE_exp7,[Default]), UsedName(RULE_indexer,[Default]), UsedName(RULE_exp1,[Default]), UsedName(ArgListContext,[Default]), UsedName(ManyVarContext,[Default]), UsedName(RULE_exp6,[Default]), UsedName(stmtPart,[Default]), UsedName(exp0,[Default]), UsedName(ifunmatch,[Default]), UsedName(RULE_aExpReturn,[Default]), UsedName(varDecl,[Default]), UsedName(STRINGTYPE,[Default]), UsedName(RULE_exp8,[Default]), UsedName(decl,[Default]), UsedName(DO,[Default]), UsedName(SEMI,[Default]), UsedName(EQUALOP,[Default]), UsedName(PrimitiveTypeContext,[Default]), UsedName(DIVOP,[Default]), UsedName(_serializedATN,[Default]), UsedName(RULE_declList,[Default]), UsedName(exp4,[Default]), UsedName(ParaDeclContext,[Default]), UsedName(RULE_argListNonNull,[Default]), UsedName(AExpReturnContext,[Default]), UsedName(Exp0Context,[Default]), UsedName(ADDOP,[Default]), UsedName(RULE_body,[Default]), UsedName(ID,[Default]), UsedName(RULE_paraDecl,[Default]), UsedName(LTOP,[Default]), UsedName(RULE_paraListNonNull,[Default]), UsedName(NEQUALOP,[Default]), UsedName(NEVOP,[Default]), UsedName(forStmt,[Default]), UsedName(ExpStmtContext,[Default]), UsedName(exp8,[Default]), UsedName(ParaListNonNullContext,[Default]), UsedName(RULE_breakStmt,[Default]), UsedName(RP,[Default]), UsedName(RULE_paraList,[Default]), UsedName(OtherStmtContext,[Default]), UsedName(ReturnStmtContext,[Default]), UsedName(ContinueStmtContext,[Default]), UsedName(mctype,[Default]), UsedName(OROP,[Default]), UsedName(RULE_funcall,[Default]), UsedName(RULE_continueStmt,[Default]), UsedName(noExpReturn,[Default]), UsedName(ifStmt,[Default]), UsedName(BLOCKCMT,[Default]), UsedName(IndexExpContext,[Default]), UsedName(TRUE,[Default]), UsedName(StmtContext,[Default]), UsedName(declList,[Default]), UsedName(RULE_stmt,[Default]), UsedName(ifmatch,[Default]), UsedName(continueStmt,[Default]), UsedName(RULE_exp9,[Default]), UsedName(RS,[Default]), UsedName(FALSE,[Default]), UsedName(RULE_exp0,[Default]), UsedName(BOOLLIT,[Default]), UsedName(expStmt,[Default]), UsedName(IF,[Default]), UsedName(Exp2Context,[Default]), UsedName(RULE_funcType,[Default]), UsedName(funcDecl,[Default]), UsedName(RULE_exp4,[Default]), UsedName(paraListNonNull,[Default]), UsedName(MODOP,[Default]), UsedName(CONTINUE,[Default]), UsedName(RULE_inputArrPointerType,[Default]), UsedName(ArgListNonNullContext,[Default]), UsedName(aExpReturn,[Default]), UsedName(RULE_returnStmt,[Default]), UsedName(MULOP,[Default]), UsedName(BodyContext,[Default]), UsedName(RULE_decl,[Default]), UsedName(IfmatchContext,[Default]), UsedName(WHILE,[Default]), UsedName(IfunmatchContext,[Default]), UsedName(Exp6Context,[Default]), UsedName(variable,[Default]), UsedName(ELSE,[Default]), UsedName(blockStmt,[Default]), UsedName(RULE_manyVar,[Default]), UsedName(breakStmt,[Default]), UsedName(BlockStmtContext,[Default]), UsedName(RULE_ifStmt,[Default]), UsedName(inputArrPointerType,[Default]), UsedName(RULE_declPart,[Default]), UsedName(RULE_noExpReturn,[Default]), UsedName(OutputArrPointerTypeContext,[Default]), UsedName(returnStmt,[Default]), UsedName(VariableContext,[Default]), UsedName(Exp7Context,[Default]), UsedName(RULE_blockStmt,[Default]), UsedName(RULE_exp5,[Default]), UsedName(RULE_funcDecl,[Default]), UsedName(VarDeclContext,[Default]), UsedName(paraList,[Default]), UsedName(RULE_forStmt,[Default]), UsedName(COMMA,[Default]), UsedName(RULE_ifunmatch,[Default]), UsedName(indexExp,[Default]), UsedName(declPart,[Default]), UsedName(StmtmatchContext,[Default]), UsedName(exp2,[Default]), UsedName(LTEOP,[Default]), UsedName(arrayPointerType,[Default]), UsedName(RULE_varDecl,[Default]), UsedName(FuncCallContext,[Default]), UsedName(FuncallContext,[Default]), UsedName(Exp4Context,[Default]), UsedName(stmtunmatch,[Default]), UsedName(Exp5Context,[Default]), UsedName(manyVar,[Default]), UsedName(BREAK,[Default]), UsedName(RULE_outputArrPointerType,[Default]), UsedName(NoExpReturnContext,[Default]), UsedName(paraDecl,[Default]), UsedName(ASSIGNOP,[Default]), UsedName(exp5,[Default]), UsedName(ANDOP,[Default]), UsedName(LS,[Default]), UsedName(T__0,[Default]), UsedName(RULE_primitiveType,[Default]), UsedName(RULE_variable,[Default]), UsedName(RULE_argList,[Default]), UsedName(ERROR_CHAR,[Default]), UsedName(stmtmatch,[Default]), UsedName(VOIDTYPE,[Default]), UsedName(MctypeContext,[Default]), UsedName(RULE_stmtmatch,[Default]), UsedName(BreakStmtContext,[Default]), UsedName(STRINGLIT,[Default]), UsedName(InputArrPointerTypeContext,[Default]), UsedName(RULE_ifmatch,[Default]), UsedName(Exp3Context,[Default]), UsedName(LB,[Default]), UsedName(INTLIT,[Default]), UsedName(ExpContext,[Default]), UsedName(Exp9Context,[Default]), UsedName(argListNonNull,[Default]), UsedName(FuncTypeContext,[Default]), UsedName(otherStmt,[Default]), UsedName(argList,[Default]), UsedName(GTEOP,[Default]), UsedName(GTOP,[Default]), UsedName(RULE_mctype,[Default]), UsedName(StmtPartContext,[Default]), UsedName(exp9,[Default]), UsedName(DeclListContext,[Default]), UsedName(exp,[Default]), UsedName(WS,[Default]), UsedName(RULE_dowhileStmt,[Default]), UsedName(RULE_otherStmt,[Default]), UsedName(funcCall,[Default]), UsedName(FOR,[Default]), UsedName(RULE_exp2,[Default]), UsedName(ParaListContext,[Default]), UsedName(funcType,[Default]), UsedName(RB,[Default]), UsedName(RULE_funcCall,[Default]), UsedName(IfStmtContext,[Default]), UsedName(DeclContext,[Default]), UsedName(StmtunmatchContext,[Default]), UsedName(FuncDeclContext,[Default]), UsedName(Exp1Context,[Default]), UsedName(IndexerContext,[Default]), UsedName(primitiveType,[Default]), UsedName(outputArrPointerType,[Default]), UsedName(body,[Default]), UsedName(Exp8Context,[Default]), UsedName(RETURN,[Default]), UsedName(FLOATLIT,[Default]), UsedName(stmt,[Default]), UsedName(ForStmtContext,[Default]), UsedName(exp7,[Default]), UsedName(RULE_stmtunmatch,[Default]), UsedName(exp3,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/home/thomasho/Documents/PPL/micro_c_compiler/src/test/scala/ParserSuite.scala, /home/thomasho/Documents/PPL/micro_c_compiler/src/test/scala/LexerSuite.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/thomasho/Documents/PPL/micro_c_compiler/src/test/scala/TestAst.scala, /home/thomasho/Documents/PPL/micro_c_compiler/src/test/scala/AstSuite.scala, /home/thomasho/Documents/PPL/micro_c_compiler/src/test/scala/ParserSuite.scala, /home/thomasho/Documents/PPL/micro_c_compiler/src/test/scala/LexerSuite.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 7 sources: invalidated sources (4) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 7 Scala sources to /home/thomasho/Documents/PPL/micro_c_compiler/target/scala-2.12/test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 6db06663 for Scala compiler version 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes:/home/thomasho/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/thomasho/Documents/PPL/micro_c_compiler/target/scala-2.12/test-classes:/home/thomasho/Documents/PPL/micro_c_compiler/target/scala-2.12/classes:/home/thomasho/Documents/PPL/micro_c_compiler/./external/antlr-4.6-complete.jar:/home/thomasho/Documents/PPL/micro_c_compiler/./external/jasmin.jar:/home/thomasho/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar:/home/thomasho/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar:/home/thomasho/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.12.3.jar:/home/thomasho/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.5.jar:/home/thomasho/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 6.675621299 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
